/*
 * @author Hiroki Ueda
 * ueda[at]genome.rcast.u-tokyo.ac.jp
 * @version 1.0
 * @since 1.0
 */
package jp.ac.utokyo.rcast.karkinos.utils;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;

public class PositionBrocks {
		
	TreeMap<Integer,Integer> treemap 
		= new TreeMap<Integer,Integer>();
	
	public void read(int count,LittleEndian la) throws IOException{
		
		List<Integer> intv = new ArrayList<Integer>();
		for(int n=0;n<count;n++)intv.add(la.readInt());
		List<Integer> sizes = new ArrayList<Integer>();
		for(int n=0;n<count;n++)sizes.add(la.readInt());
		
		int idx = 0;
		for(int pos:intv){
			
			int size = sizes.get(idx);
			treemap.put(pos, size);
			//System.out.println(pos+":"+size);
			idx++;
		}
		intv  = null;
		sizes = null;
		
	}
	
	public boolean inBlock(int pos){
		
		if(treemap==null)return false;
		if(treemap.containsKey(pos)){
			return true;
		}
		Integer floorPos = treemap.floorKey(pos);
		if(floorPos==null)return false;
		int floorBlockSize = treemap.get(floorPos);
		int end = (floorPos+floorBlockSize);
		return (pos<end);
		
	}
	
	
}
