package jp.ac.utokyo.rcast.karkinos.bean;

import java.io.Serializable;
import static jp.ac.utokyo.rcast.karkinos.bean.BaitSampling.*;

import org.apache.commons.math.stat.descriptive.SummaryStatistics;

public class BailSamplingBean implements Serializable {

	
	int[] fromStartForward = new int[bait_sample_length];
	int[] fromStartReverse = new int[bait_sample_length];

	int[] fromEndForward = new int[bait_sample_length];
	int[] fromEndReverse = new int[bait_sample_length];
	
	

	public void setForward(int relstart, int relend, boolean mapNegative) {
		//
		for (int n = relstart; n <= relend; n++) {

			if (n >= 0 && n < bait_sample_length) {
				//
				if (mapNegative) {

					//
					fromStartReverse[n] = fromStartReverse[n] + 1;

				} else {

					//
					fromStartForward[n] = fromStartForward[n] + 1;

				}

			}

		}
	}

	public void setReverse(int relstart, int relend, boolean mapNegative) {
		//
		for (int n = relstart; n <= relend; n++) {

			if (n >= 0 && n < bait_sample_length) {
				//
				if (mapNegative) {
					//
					fromEndReverse[n] = fromEndReverse[n] + 1;

				} else {					//
					
					fromEndForward [n] = fromEndForward[n] + 1;
				}

			}

		}
	}

	//

}
